class Solution {
    long maxFruits(long arr[], int m) {
        int n = arr.length;
        if (m >= n) {
            long total = 0;
            for (long num : arr) {
                total += num;
            }
            return total;
        }
        
        long[] extendedArr = new long[2 * n];
        for (int i = 0; i < 2 * n; i++) {
            extendedArr[i] = arr[i % n];
        }
        
        long maxSum = 0;
        long currentSum = 0;
        
        // Initialize the first window
        for (int i = 0; i < m; i++) {
            currentSum += extendedArr[i];
        }
        maxSum = currentSum;
        
        // Slide the window through the extended array
        for (int i = m; i < 2 * n; i++) {
            currentSum += extendedArr[i] - extendedArr[i - m];
            if (currentSum > maxSum) {
                maxSum = currentSum;
            }
        }
        
        return maxSum;
    }
}
