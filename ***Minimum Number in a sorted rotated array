class Solution {
public:
    int minNumber(int arr[], int low, int high) {
        while (low <= high) {
            // If the array is not rotated
            if (arr[low] <= arr[high]) {
                return arr[low];
            }
            
            int mid = low + (high - low) / 2;
            
            // Check if mid is the minimum element
            if (mid > low && arr[mid] < arr[mid - 1]) {
                return arr[mid];
            }
            
            // Check if mid+1 is the minimum element
            if (mid < high && arr[mid + 1] < arr[mid]) {
                return arr[mid + 1];
            }
            
            // Decide which half to search
            if (arr[mid] > arr[high]) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return -1; // This line is a fallback and should theoretically never be reached for valid inputs
    }
};
